/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '16-12-5 下午9:54' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'war'
apply plugin: 'eclipse'

sourceCompatibility = 1.7
targetCompatibility = 1.7

version = 3.0

ext{
	springVersion = "4.3.4.RELEASE"
	deployDir = "E:/software/apache-tomcat-7.0.73/work/"
	
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenLocal()
    //mavenCentral()
    maven{
    	url 'http://central.maven.org/maven2/'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    
	compile "org.springframework:spring-context:${springVersion}"
	compile "org.springframework:spring-core:${springVersion}"
	compile "org.springframework:spring-context-support:${springVersion}"
	compile "org.springframework:spring-jdbc:${springVersion}"
	compile "org.springframework:spring-tx:${springVersion}"
	compile "org.springframework:spring-webmvc:${springVersion}"
	compile "org.springframework:spring-webmvc-portlet:${springVersion}"
	compile "org.springframework:spring-beans:${springVersion}"
	compile "org.springframework:spring-web:${springVersion}"
	compile "org.springframework:spring-aop:${springVersion}"
    compile "org.springframework:spring-test:${springVersion}"
	
	compile 'org.aspectj:aspectjweaver:1.8.9'
	compile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'log4j:log4j:1.2.17'
	compile 'ch.qos.logback:logback-core:1.1.7'
	compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
	//compile 'com.alibaba:fastjson:1.2.21'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
	compile 'com.jolbox:bonecp:0.8.0.RELEASE'
	compile 'com.sun.mail:javax.mail:1.5.6'
	
	//compile 'org.mybatis:mybatis:3.2.2'
	//compile 'org.mybatis:mybatis-spring:1.2.0'
	//compile 'mysql:mysql-connector-java:5.1.26'
	//compile 'com.alibaba:druid:1.0.27'
	
	//compile 'velocity:velocity:1.7'
	//compile 'commons-fileupload:commons-fileupload:1.3'
	//compile 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'
	//compile 'javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1'
	
}

task delopyToTomcat(type: Copy){
	from "build/libs/${rootProject.name}-${version}.war"
	into "${deployDir}"
}

task printInfo(){
	println "Builiding ${rootProject.name}-${version}.war now.."
	println "build/libs/${rootProject.name}-${version}.war"
	println "${deployDir}${rootProject.name}-${version}.war"
}
